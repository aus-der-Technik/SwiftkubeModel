//
// Copyright 2020 Iskandar Abudiab (iabudiab.dev)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

///
/// Generated by Swiftkube:ModelGen
/// Kubernetes v1.18.9
///

import Foundation

enum APIResources: String, CaseIterable {

	case admissionregistrationV1MutatingWebhookConfiguration = "admissionregistration/v1/MutatingWebhookConfiguration"
	case admissionregistrationV1Beta1MutatingWebhookConfiguration = "admissionregistration/v1beta1/MutatingWebhookConfiguration"
	case admissionregistrationV1Beta1ValidatingWebhookConfiguration = "admissionregistration/v1beta1/ValidatingWebhookConfiguration"
	case admissionregistrationV1ValidatingWebhookConfiguration = "admissionregistration/v1/ValidatingWebhookConfiguration"
	case apiextensionsV1CustomResourceDefinition = "apiextensions/v1/CustomResourceDefinition"
	case apiextensionsV1Beta1CustomResourceDefinition = "apiextensions/v1beta1/CustomResourceDefinition"
	case apiregistrationV1APIService = "apiregistration/v1/APIService"
	case apiregistrationV1Beta1APIService = "apiregistration/v1beta1/APIService"
	case appsV1ControllerRevision = "apps/v1/ControllerRevision"
	case appsV1DaemonSet = "apps/v1/DaemonSet"
	case appsV1Deployment = "apps/v1/Deployment"
	case appsV1ReplicaSet = "apps/v1/ReplicaSet"
	case appsV1StatefulSet = "apps/v1/StatefulSet"
	case auditregistrationV1Alpha1AuditSink = "auditregistration/v1alpha1/AuditSink"
	case authenticationV1TokenRequest = "authentication/v1/TokenRequest"
	case authenticationV1TokenReview = "authentication/v1/TokenReview"
	case authenticationV1Beta1TokenReview = "authentication/v1beta1/TokenReview"
	case authorizationV1LocalSubjectAccessReview = "authorization/v1/LocalSubjectAccessReview"
	case authorizationV1Beta1LocalSubjectAccessReview = "authorization/v1beta1/LocalSubjectAccessReview"
	case authorizationV1SelfSubjectAccessReview = "authorization/v1/SelfSubjectAccessReview"
	case authorizationV1Beta1SelfSubjectAccessReview = "authorization/v1beta1/SelfSubjectAccessReview"
	case authorizationV1SelfSubjectRulesReview = "authorization/v1/SelfSubjectRulesReview"
	case authorizationV1Beta1SelfSubjectRulesReview = "authorization/v1beta1/SelfSubjectRulesReview"
	case authorizationV1Beta1SubjectAccessReview = "authorization/v1beta1/SubjectAccessReview"
	case authorizationV1SubjectAccessReview = "authorization/v1/SubjectAccessReview"
	case autoscalingV2Beta1HorizontalPodAutoscaler = "autoscaling/v2beta1/HorizontalPodAutoscaler"
	case autoscalingV1HorizontalPodAutoscaler = "autoscaling/v1/HorizontalPodAutoscaler"
	case autoscalingV2Beta2HorizontalPodAutoscaler = "autoscaling/v2beta2/HorizontalPodAutoscaler"
	case autoscalingV1Scale = "autoscaling/v1/Scale"
	case batchV1Beta1CronJob = "batch/v1beta1/CronJob"
	case batchV2Alpha1CronJob = "batch/v2alpha1/CronJob"
	case batchV1Job = "batch/v1/Job"
	case certificatesV1Beta1CertificateSigningRequest = "certificates/v1beta1/CertificateSigningRequest"
	case coordinationV1Lease = "coordination/v1/Lease"
	case coordinationV1Beta1Lease = "coordination/v1beta1/Lease"
	case coreV1Binding = "v1/Binding"
	case coreV1ComponentStatus = "v1/ComponentStatus"
	case coreV1ConfigMap = "v1/ConfigMap"
	case coreV1Endpoints = "v1/Endpoints"
	case coreV1Event = "v1/Event"
	case coreV1LimitRange = "v1/LimitRange"
	case coreV1Namespace = "v1/Namespace"
	case coreV1Node = "v1/Node"
	case coreV1PersistentVolume = "v1/PersistentVolume"
	case coreV1PersistentVolumeClaim = "v1/PersistentVolumeClaim"
	case coreV1Pod = "v1/Pod"
	case coreV1PodTemplate = "v1/PodTemplate"
	case coreV1ReplicationController = "v1/ReplicationController"
	case coreV1ResourceQuota = "v1/ResourceQuota"
	case coreV1Secret = "v1/Secret"
	case coreV1Service = "v1/Service"
	case coreV1ServiceAccount = "v1/ServiceAccount"
	case discoveryV1Beta1EndpointSlice = "discovery/v1beta1/EndpointSlice"
	case eventsV1Beta1Event = "events/v1beta1/Event"
	case extensionsV1Beta1Ingress = "extensions/v1beta1/Ingress"
	case flowcontrolV1Alpha1FlowSchema = "flowcontrol/v1alpha1/FlowSchema"
	case flowcontrolV1Alpha1PriorityLevelConfiguration = "flowcontrol/v1alpha1/PriorityLevelConfiguration"
	case networkingV1Beta1Ingress = "networking/v1beta1/Ingress"
	case networkingV1Beta1IngressClass = "networking/v1beta1/IngressClass"
	case networkingV1NetworkPolicy = "networking/v1/NetworkPolicy"
	case nodeV1Beta1RuntimeClass = "node/v1beta1/RuntimeClass"
	case nodeV1Alpha1RuntimeClass = "node/v1alpha1/RuntimeClass"
	case policyV1Beta1Eviction = "policy/v1beta1/Eviction"
	case policyV1Beta1PodDisruptionBudget = "policy/v1beta1/PodDisruptionBudget"
	case policyV1Beta1PodSecurityPolicy = "policy/v1beta1/PodSecurityPolicy"
	case rbacV1Beta1ClusterRole = "rbac/v1beta1/ClusterRole"
	case rbacV1ClusterRole = "rbac/v1/ClusterRole"
	case rbacV1Alpha1ClusterRole = "rbac/v1alpha1/ClusterRole"
	case rbacV1Beta1ClusterRoleBinding = "rbac/v1beta1/ClusterRoleBinding"
	case rbacV1Alpha1ClusterRoleBinding = "rbac/v1alpha1/ClusterRoleBinding"
	case rbacV1ClusterRoleBinding = "rbac/v1/ClusterRoleBinding"
	case rbacV1Beta1Role = "rbac/v1beta1/Role"
	case rbacV1Alpha1Role = "rbac/v1alpha1/Role"
	case rbacV1Role = "rbac/v1/Role"
	case rbacV1Alpha1RoleBinding = "rbac/v1alpha1/RoleBinding"
	case rbacV1Beta1RoleBinding = "rbac/v1beta1/RoleBinding"
	case rbacV1RoleBinding = "rbac/v1/RoleBinding"
	case schedulingV1Alpha1PriorityClass = "scheduling/v1alpha1/PriorityClass"
	case schedulingV1PriorityClass = "scheduling/v1/PriorityClass"
	case schedulingV1Beta1PriorityClass = "scheduling/v1beta1/PriorityClass"
	case settingsV1Alpha1PodPreset = "settings/v1alpha1/PodPreset"
	case storageV1CSIDriver = "storage/v1/CSIDriver"
	case storageV1Beta1CSIDriver = "storage/v1beta1/CSIDriver"
	case storageV1Beta1CSINode = "storage/v1beta1/CSINode"
	case storageV1CSINode = "storage/v1/CSINode"
	case storageV1StorageClass = "storage/v1/StorageClass"
	case storageV1Beta1StorageClass = "storage/v1beta1/StorageClass"
	case storageV1VolumeAttachment = "storage/v1/VolumeAttachment"
	case storageV1Beta1VolumeAttachment = "storage/v1beta1/VolumeAttachment"
	case storageV1Alpha1VolumeAttachment = "storage/v1alpha1/VolumeAttachment"
}
